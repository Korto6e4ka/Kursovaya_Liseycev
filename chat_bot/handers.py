from aiogram import Bot, Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from parse import squares_list, museums_list, parks_list, monuments_list, places_list
import random

def main_kb():
    kb = InlineKeyboardBuilder()
    kb.button(text=f'üí• –ü–ª–æ—â–∞–¥–∏ –∏ —Å–∫–≤–µ—Ä—ã', callback_data='check_squares')
    kb.button(text=f'‚≠êÔ∏è –ú—É–∑–µ–∏ –∏ –∫—É–ª—å—Ç—É—Ä–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã', callback_data='check_museums')
    kb.button(text=f'ü¶ú –ü–∞—Ä–∫–∏ –∏ –∑–æ–Ω—ã –æ—Ç–¥—ã—Ö–∞', callback_data='check_parks')
    kb.button(text=f'ü™ô –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–∞–º—è—Ç–Ω–∏–∫–∏ –∏ —Å–æ–æ—Ä—É–∂–µ–Ω–∏—è', callback_data='check_monuments')
    kb.button(text=f'ü™ß –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –º–µ—Å—Ç–∞', callback_data='check_places')
    kb.adjust(1)
    return kb.as_markup(resize_keyboard=True)


start_router = Router()

emotions = ['üòå –í–∞–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è', 'üòå –í—ã –æ—Å—Ç–∞–Ω–µ—Ç–µ—Å—å –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ', 'üòç –∏ –≤–æ–∑—å–º—Ç–µ —Å —Å–æ–±–æ–π –≤—Ç–æ—Ä—É—é –ø–æ–ª–æ–≤–∏–Ω–∫—É', 'üòç —ç–º–æ—Ü–∏–∏ –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å –æ–±–µ—Å–ø–µ—á–µ–Ω—ã', 'üí• –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã']

@start_router.message(Command(commands='start'))
async def hello_windows(message: Message, bot: Bot):
    await bot.send_message(message.from_user.id,'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ üôå \n\n ü§ñ —Ä–∞—Å—Å–∫–∞–∂—É –í–∞–º –∫—É–¥–∞ —Å—Ö–æ–¥–∏—Ç—å –≤ –¢—é–º–µ–Ω–µ', reply_markup=main_kb())


@start_router.callback_query(F.data.startswith('check_squares'))
async def echo_message(call: CallbackQuery):
    item = squares_list
    value = random.choice(item)
    emotion = random.choice(emotions)
    await call.message.answer(f'–ü–æ—Å–µ—Ç–∏—Ç–µ: {value}\n\n'
                              f'{emotion}')
    await call.answer()


@start_router.callback_query(F.data.startswith('check_museums'))
async def echo_museums(call: CallbackQuery):
    item = museums_list
    value = random.choice(item)
    emotion = random.choice(emotions)
    await call.message.answer(f'–ü–æ—Å–µ—Ç–∏—Ç–µ: {value}\n\n'
                              f'{emotion}')
    await call.answer()

@start_router.callback_query(F.data.startswith('check_parks'))
async def echo_parks(call: CallbackQuery):
    item = museums_list
    value = random.choice(item)
    emotion = random.choice(emotions)
    await call.message.answer(f'–ü–æ—Å–µ—Ç–∏—Ç–µ: {value}\n\n'
                              f'{emotion}')
    await call.answer()


@start_router.callback_query(F.data.startswith('check_monuments'))
async def echo_monuments(call: CallbackQuery):
    item = monuments_list
    value = random.choice(item)
    emotion = random.choice(emotions)
    await call.message.answer(f'–ü–æ—Å–µ—Ç–∏—Ç–µ: {value}\n\n'
                              f'{emotion}')
    await call.answer()


@start_router.callback_query(F.data.startswith('check_places'))
async def echo_monuments(call: CallbackQuery):
    item = places_list
    value = random.choice(item)
    emotion = random.choice(emotions)
    await call.message.answer(f'–ü–æ—Å–µ—Ç–∏—Ç–µ: {value}\n\n'
                              f'{emotion}')
    await call.answer()